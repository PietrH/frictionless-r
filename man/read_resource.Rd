% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_resource.R
\name{read_resource}
\alias{read_resource}
\title{Read data from a Data Package resource}
\usage{
read_resource(package, resource_name)
}
\arguments{
\item{package}{Package object, see \code{read_package()}.}

\item{resource_name}{Name of the resource to load data from.}
}
\value{
Tibble with the resource data.
}
\description{
Reads data from a Data Package resource into a \strong{tibble} (a Tidyverse data
frame). The resource has to meet the requirements of a \href{https://specs.frictionlessdata.io/tabular-data-resource/}{Tabular Data Resource}. The
function is a wrapper around \code{readr::read_delim()}, passing the resource
properties \code{path}, CSV dialect, column names, data types, etc. Column names
are taken from the provided \code{schema}, not from the header in the CSV file(s).
}
\details{
The \code{resource} properties are handled as follows:
\subsection{Path}{

\href{https://specs.frictionlessdata.io/data-resource/#data-location}{\code{path}} is
required. It can be a local path or URL, which must resolve. When multiple
paths are provided (\verb{"path": [ "myfile1.csv", "myfile2.csv"]}) then data are
merged into a single data frame, in the order in which the paths are listed.
}

\subsection{Data}{

Inline \code{data} is not supported.
}

\subsection{Name}{

\href{https://specs.frictionlessdata.io/data-resource/#name}{\code{name}} is required.
It is used to find the resource with \code{name} = \code{resource_name}.
}

\subsection{Profile}{

\href{https://specs.frictionlessdata.io/tabular-data-resource/#specification}{\code{profile}}
is required to have the value \code{tabular-data-resource}.
}

\subsection{File encoding}{

\href{https://specs.frictionlessdata.io/tabular-data-resource/#csv-file-requirements}{\code{encoding}}
is required if resource files are not encoded as UTF-8. For proper values
(e.g. \code{windows-1252}), see "Preferred MIME Names" in
\href{https://specs.frictionlessdata.io/data-resource/#optional-properties}{encoding}.
The returned data frame will always be UTF-8.
}

\subsection{CSV Dialect}{

\code{dialect} is required if the resource CSV file properties differ from the
defaults described in the \href{https://specs.frictionlessdata.io/csv-dialect/#specification}{CSV Dialect specification}
(i.e. comma separated, \verb{"} to quote, etc.).

For \code{escapeChar}, only \code{"escapeChar": "\\\\"} is supported and it will ignore
\code{"doubleChar": "true"} as these fields are mutually exclusive.

The following CSV dialect properties are not interpreted: \code{lineTerminator},
\code{nullSequence}, \code{caseSensitiveHeader}, and \code{csvddfVersion}.
}

\subsection{Schema}{

\code{schema} is required and must follow the \href{http://specs.frictionlessdata.io/table-schema/}{Table Schema} specification.
\itemize{
\item Field \code{name}s are used as column headers.
\item Field \code{type}s are used as column types when provided. Types are guessed
when no type is provided or it has no equivalent in R.
\item Field \code{format}s (especially for \code{date}, \code{time}, \code{datetime}) are ignored.
\item \href{https://specs.frictionlessdata.io/table-schema/#missing-values}{\code{missingValues}}
are used to interpret as \code{NA}, with \code{""} as default.
}
}

\subsection{Ignored resource properties}{
\itemize{
\item \code{title}
\item \code{description}
\item \code{format}
\item \code{mediatype}
\item \code{bytes}
\item \code{hash}
\item \code{sources}
\item \code{licenses}
}
}
}
\examples{
path <- system.file("extdata", "datapackage.json", package = "datapackage")
package <- read_package(path)
package$resource_names
read_resource(package, "observations")
}
